!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=3)}([function(e,t){e.exports=require("mongoose")},function(e,t){e.exports=require("express")},function(e,t){e.exports=require("body-parser")},function(e,t,n){"use strict";n.r(t);var r=n(0),o=n.n(r);o.a.Promise=global.Promise;const s=new o.a.Schema({name:String,age:Number});var a=o.a.model("Character",s),u=n(1),i=n.n(u),d=n(2),c=n.n(d);const l=i()(),f=process.env.PORT||3001;l.use(i.a.static("client/build")),l.use(c.a.urlencoded({extended:!0})),l.use(c.a.json()),o.a.connect("mongodb://localhost/crud",{useNewUrlParser:!0,useUnifiedTopology:!0},e=>{if(e)throw console.log(e),new Error(""+e);console.log("db connected"),l.get("/api/characters",(e,t)=>{a.find({},(e,n)=>{e?t.status(500).send():t.status(200).send(n)})}),l.post("/api/characters",(e,t)=>{const{name:n,age:r}=e.body;(n||r)&&new a({name:n,age:r}).save(e=>{e?t.status(500).send():a.find({},(e,n)=>{e?t.status(500).send():t.status(200).send(n)})})}),l.put("/api/characters",(e,t)=>{const{id:n,name:r,age:o}=e.body;a.findByIdAndUpdate(n,{$set:{name:r,age:o}},e=>{e?t.status(500).send():a.find({},(e,n)=>{e?t.status(500).send():t.status(200).send(n)})})}),l.delete("/api/characters",(e,t)=>{const{id:n}=e.body;a.findByIdAndRemove(n,e=>{e?t.status(500).send():a.find({},(e,n)=>{e?t.status(500).send():t.status(200).send(n)})})}),l.listen(f,()=>{console.log("listening on port "+f)})})}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,